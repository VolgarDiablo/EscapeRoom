import React from "react";
import { useQuery } from "@tanstack/react-query";
import axios from "axios";

const fetchQuest = async () => {
  const { data } = await axios.get("http://localhost:8080/quest");
  return data;
};

function Quest() {
  const { data, isLoading, error } = useQuery({
    queryKey: ["quest"],
    queryFn: fetchQuest,
  });

  if (isLoading) return <div className="text-center text-xl">Загрузка...</div>;
  if (error)
    return (
      <div className="text-red-500 text-center">Ошибка загрузки данных</div>
    );

  return (
    <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-x-6 gap-y-8 px-4">
      {data.map((quest) => (
        <div
          key={quest.id}
          className="relative rounded-lg overflow-hidden shadow-lg group cursor-pointer"
        >
          <img
            src={quest.base64}
            alt={quest.title}
            className="w-full h-56 object-cover transition-transform duration-300 group-hover:scale-105"
          />

          <div className="absolute bottom-0 left-0 w-full h-[120px] bg-gradient-to-t from-[#1C1B1B] to-[#2E2E2E]/0 flex flex-col justify-end p-5">
            <h3 className="text-white text-xl font-bold text-start">
              {quest.title}
            </h3>

            <h4 className="text-white text-lg font-semibold ">{quest.name}</h4>

            <div className="flex items-center text-gray-300 text-sm mt-2">
              <span className="flex items-center gap-1">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  width="13"
                  height="16"
                  viewBox="0 0 13 16"
                  fill="none"
                >
                  <path
                    d="M8.89227 10.1991H9.88072C10.9935 10.1991 12.0809 11.0107 11.8959 12.0545L11.6944 13.0439C11.4175 14.1957 10.792 14.8993 9.6792 15H3.33339C2.2206 14.8993 1.62109 14.0222 1.3182 13.0439L1.11668 12.0545C0.871436 11.0418 2.01908 10.1991 3.13187 10.1991H4.09311M3.08653 4.35241C2.85882 4.35241 2.6313 4.54017 2.6313 4.77153V5.60959C2.6313 5.84076 2.83524 6.02889 3.08653 6.02889C3.08653 6.02889 3.76928 7.70482 4.22431 8.3336C4.50623 8.72322 4.90705 9.65849 6.50005 9.65849C8.09306 9.65849 8.49368 8.72322 8.7758 8.3336C9.23103 7.70482 9.91358 6.02889 9.91358 6.02889C10.1647 6.02889 10.3688 5.84076 10.3688 5.60959V4.77153C10.3688 4.54017 10.1647 4.35241 9.91358 4.35241V3.72382C9.91358 2.25718 9.01238 1 6.50005 1C3.99659 1 3.08653 2.25699 3.08653 3.72382V4.35241Z"
                    stroke="white"
                    stroke-miterlimit="10"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                  />
                </svg>
                {quest.players} чел
              </span>
              <span className="mx-2">|</span>
              <span className="flex items-center gap-1">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  width="16"
                  height="16"
                  viewBox="0 0 16 16"
                  fill="none"
                >
                  <path
                    d="M10.6382 3.88374L10.6371 3.88544C10.5535 4.02755 10.5777 4.19493 10.6471 4.31761C10.7166 4.44053 10.8479 4.54783 11.015 4.54783H14.2522V7.26258C14.0032 7.16271 13.735 7.09784 13.4457 7.09784C12.1751 7.09784 11.1435 8.12939 11.1435 9.4C11.1435 10.6706 12.1751 11.7022 13.4457 11.7022C13.7357 11.7022 14.0041 11.6334 14.2522 11.5325V14.2522H4.54783V11.015C4.54783 10.849 4.44314 10.7177 4.32164 10.6471C4.20057 10.5768 4.03538 10.5509 3.89335 10.6303L3.89333 10.6302L3.8904 10.632C3.67729 10.7588 3.44019 10.8293 3.17717 10.8293C2.38607 10.8293 1.74783 10.196 1.74783 9.4C1.74783 8.60397 2.38607 7.97067 3.17717 7.97067C3.44189 7.97067 3.67876 8.03656 3.8904 8.16253L3.89037 8.16257L3.89335 8.16424C4.03531 8.24357 4.20029 8.21765 4.32105 8.14839C4.44184 8.07912 4.54783 7.94939 4.54783 7.78504V4.54783H7.78504C7.95206 4.54783 8.08344 4.44053 8.15292 4.31761C8.22226 4.19492 8.24645 4.02755 8.16286 3.88544L8.16287 3.88543L8.16184 3.88374C8.03667 3.67846 7.97067 3.44214 7.97067 3.17717C7.97067 2.38607 8.60397 1.74783 9.4 1.74783C10.196 1.74783 10.8293 2.38607 10.8293 3.17717C10.8293 3.44214 10.7633 3.67846 10.6382 3.88374ZM9.4 0.875C8.12918 0.875 7.09784 1.91227 7.09784 3.17717C7.09784 3.35229 7.12067 3.51686 7.15842 3.675H4.10866C3.99013 3.675 3.88247 3.72954 3.806 3.806C3.72954 3.88247 3.675 3.99013 3.675 4.10866V7.15842C3.51686 7.12067 3.35229 7.09784 3.17717 7.09784C1.91227 7.09784 0.875 8.12918 0.875 9.4C0.875 10.6708 1.91227 11.7022 3.17717 11.7022C3.35229 11.7022 3.51686 11.6793 3.675 11.6416V14.6913C3.675 14.8099 3.72954 14.9175 3.806 14.994C3.88247 15.0705 3.99013 15.125 4.10866 15.125H14.6913C14.8099 15.125 14.9175 15.0705 14.994 14.994C15.0705 14.9175 15.125 14.8099 15.125 14.6913V10.789C15.125 10.6209 15.0266 10.4591 14.8694 10.3884C14.7143 10.3186 14.523 10.3484 14.3975 10.4653C14.1442 10.6929 13.8103 10.8293 13.4457 10.8293C12.6494 10.8293 12.0163 10.1963 12.0163 9.4C12.0163 8.60368 12.6494 7.97067 13.4457 7.97067C13.8115 7.97067 14.1451 8.10245 14.3974 8.32918C14.5224 8.44556 14.7081 8.47623 14.8639 8.40612C15.0164 8.33748 15.125 8.17872 15.125 8.01102V4.10866C15.125 3.99013 15.0705 3.88247 14.994 3.806C14.9175 3.72954 14.8099 3.675 14.6913 3.675H11.6416C11.6793 3.51686 11.7022 3.35229 11.7022 3.17717C11.7022 1.91227 10.6708 0.875 9.4 0.875Z"
                    fill="white"
                    stroke="white"
                    stroke-width="0.25"
                  />
                </svg>
                {quest.difficulty}
              </span>
            </div>
          </div>
        </div>
      ))}
    </div>
  );
}

export default Quest;
